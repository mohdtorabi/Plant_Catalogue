{"version":3,"sources":["components/CreatePlant.js","components/EditPlant.js","components/ListPlants.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","width","CreatePlant","classes","useState","name","description","family","kingdom","species","plantDetail","setPlantDetail","onSubmitForm","e","a","preventDefault","body","axios","method","url","headers","data","JSON","stringify","window","location","console","log","className","noValidate","autoComplete","onSubmit","TextField","id","label","type","value","onChange","prev","target","style","direction","justifyContent","marginTop","fontSize","color","backgroundColor","boxShadow","padding","borderRadius","boxSizing","modal","display","alignItems","paper","palette","background","border","shadows","EditPlant","plant","open","setOpen","updatePlantDetail","plant_id","Button","variant","onClick","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","table","minWidth","ListPlants","plants","setPlants","getPlants","then","res","catch","deletePlant","plantDeleted","filter","useHistory","useEffect","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","scope","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f3d5d92.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from '@material-ui/core/Button';\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 200,\n    },\n  },\n}));\n\n\nconst CreatePlant = () => {\n  const classes = useStyles();\n  const [plantDetail, setPlantDetail] = useState({\n    name: \"\",\n    description: \"\",\n    family: \"\",\n    kingdom: \"\",\n    species: \"\",\n  })\n\n  const onSubmitForm = async (e) => {\n    e.preventDefault()\n    try {\n      const body = {\n        name: plantDetail.name, \n        description: plantDetail.description, \n        family: plantDetail.family,\n        kingdom: plantDetail.kingdom,\n        species: plantDetail.species,\n      };\n      const response = await axios(\"/http://localhost:5000/plants\", {\n        method: \"POST\",\n        url: '/',\n        headers: {\"Content-Type\": \"application/json\"},\n        data: JSON.stringify(body)\n      });\n      window.location = \"/\"\n    } catch {\n      console.log(\"errorrr\");\n    }\n  }\n\n  return (\n    <div>\n      <h1>Create a Plant Porfolio</h1>\n      <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={onSubmitForm}>\n      <TextField\n          id=\"standard-error-helper-text\"\n          label=\"Plant Name\"\n          type=\"text\"\n          value={plantDetail.name}\n          onChange={e => setPlantDetail((prev) => ({\n            ...prev,\n            name: e.target.value,\n          }))}\n        />\n        <TextField\n          id=\"standard-error-helper-text\"\n          label=\"Plant Description\"\n          type=\"text\"\n          value={plantDetail.description}\n          onChange={e => setPlantDetail((prev) => ({\n            ...prev,\n            description: e.target.value,\n          }))}\n        />\n        <TextField\n          id=\"standard-error-helper-text\"\n          label=\"Plant Family\"\n          type=\"text\"\n          value={plantDetail.family}\n          onChange={e => setPlantDetail((prev) => ({\n            ...prev,\n            family: e.target.value,\n          }))}\n        />\n        <TextField\n          id=\"standard-error-helper-text\"\n          label=\"Plant Kingdom\"\n          type=\"url\"\n          value={plantDetail.kingdom}\n          onChange={e => setPlantDetail((prev) => ({\n            ...prev,\n            kingdom: e.target.value,\n          }))}\n        />\n        <TextField\n          id=\"standard-error-helper-text\"\n          label=\"Plant Species\"\n          type=\"url\"\n          value={plantDetail.species}\n          onChange={e => setPlantDetail((prev) => ({\n            ...prev,\n            species: e.target.value,\n          }))}\n        />\n        <button style={{direction:\"flex\", justifyContent:\"flex-end\",marginTop:\"20px\",fontSize:\"0.875em\", color: \"white\", backgroundColor:\"#3f51b5\", boxShadow:\"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\", padding:\"6px 16px\", borderRadius:\"4px\", boxSizing:\"border-box\" }}>\n          Create Plant\n        </button>\n      </form>\n      \n    </div>\n  );\n};\n\nexport default CreatePlant;\n","import React, {useState} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport TextField from \"@material-ui/core/TextField\";\nimport axios from \"axios\";\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function EditPlant({plant}) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [plantDetail, setPlantDetail] = useState({\n    name: plant.name,\n    description: plant.description,\n    family: plant.family,\n    kingdom: plant.kingdom,\n    species: plant.species,\n  })\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const updatePlantDetail = async (e) => {\n    e.preventDefault()\n    try {\n      const body = {\n        name: plantDetail.name, \n        description: plantDetail.description, \n        family: plantDetail.family,\n        kingdom: plantDetail.kingdom,\n        species: plantDetail.species,\n      };\n      const response = await axios(`http://localhost:5000/plants/${plant.plant_id}`, {\n        method: \"PUT\",\n        url: '/',\n        headers: {\"Content-Type\": \"application/json\"},\n        data: JSON.stringify(body)\n      });\n      window.location = \"/\";\n    } catch {\n      console.log(\"errorrr\");\n    }\n  }\n\n  return (\n    <div>\n      <Button variant=\"contained\" color=\"primary\" type=\"button\" onClick={handleOpen}>\n        Edit\n      </Button>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open} style={{backgroundColor:\"white\", color:\"black\", padding:\"10px\"}}>\n          <div>\n            <h1>Edit Plant Porfolio</h1>\n            <form\n              className={classes.root}\n              noValidate\n              autoComplete=\"off\"\n            >\n              <TextField\n                id=\"standard-error-helper-text\"\n                label=\"Plant Name\"\n                type=\"text\"\n                value={plantDetail.name}\n                onChange={(e) =>\n                  setPlantDetail((prev) => ({\n                    ...prev,\n                    name: e.target.value,\n                  }))\n                }\n              />\n              <TextField\n                id=\"standard-error-helper-text\"\n                label=\"Plant Description\"\n                type=\"text\"\n                value={plantDetail.description}\n                onChange={(e) =>\n                  setPlantDetail((prev) => ({\n                    ...prev,\n                    description: e.target.value,\n                  }))\n                }\n              />\n              <TextField\n                id=\"standard-error-helper-text\"\n                label=\"Plant Family\"\n                type=\"url\"\n                value={plantDetail.family}\n                onChange={(e) =>\n                  setPlantDetail((prev) => ({\n                    ...prev,\n                    family: e.target.value,\n                  }))\n                }\n              />\n              <TextField\n                id=\"standard-error-helper-text\"\n                label=\"Plant Kingdom\"\n                type=\"url\"\n                value={plantDetail.kingdom}\n                onChange={(e) =>\n                  setPlantDetail((prev) => ({\n                    ...prev,\n                    kingdom: e.target.value,\n                  }))\n                }\n              />\n              <TextField\n                id=\"standard-error-helper-text\"\n                label=\"Plant Species\"\n                type=\"url\"\n                value={plantDetail.species}\n                onChange={(e) =>\n                  setPlantDetail((prev) => ({\n                    ...prev,\n                    species: e.target.value,\n                  }))\n                }\n              />\n              <Button variant=\"contained\" color=\"primary\" onClick={e => updatePlantDetail(e)}>Edit Plant</Button>\n            </form>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n","import React, {Fragment, useEffect, useState} from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport axios from \"axios\";\nimport EditPlant from \"./EditPlant\";\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst ListPlants = () => {\n  const classes = useStyles();\n  const [plants, setPlants] = useState([])\n\n\n  const getPlants = async () => {\n    return await axios(\"http://localhost:5000/plants\")\n      .then((res) => {\n        setPlants(res.data)\n      })\n      .catch((e) => {\n        console.log(\"error listing plants\", e);\n      })\n  }\n\n  const deletePlant = async (id) => {\n    return await axios(`http://localhost:5000/plants/${id}`, {\n      method: \"DELETE\"\n    })\n      .then((plantDeleted) => {\n        setPlants(plants.filter(plant => plant.plant_id !== id))\n      })\n      .catch((e) => {\n        console.log(\"error listing plants\", e);\n      })\n  }\n\n  const history = useHistory();\n\n  \n\n  useEffect(() => {\n    getPlants()\n  },[])\n\n\n  return (\n    <Fragment>\n      <h1>Plant Catalogue</h1>\n      <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ID</TableCell>\n            <TableCell align=\"center\">Name</TableCell>\n            <TableCell align=\"center\">Description</TableCell>\n            <TableCell align=\"center\">Family</TableCell>\n            <TableCell align=\"center\">Kingdom</TableCell>\n            <TableCell align=\"center\">Species</TableCell>\n            <TableCell align=\"Center\">Edit Plant</TableCell>\n            <TableCell align=\"Center\">Delete Plant</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {plants.map((plant) => (\n            <TableRow key={plant.plant_id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {plant.plant_id}\n              </TableCell>\n              <TableCell align=\"center\">{plant.name}</TableCell>\n              <TableCell align=\"center\">{plant.description}</TableCell>\n              <TableCell align=\"center\">{plant.family}</TableCell>\n              <TableCell align=\"center\">{plant.kingdom}</TableCell>\n              <TableCell align=\"center\">{plant.species}</TableCell>\n              <TableCell align=\"center\"><EditPlant plant={plant}/></TableCell>\n              <TableCell align=\"center\"><Button onClick={()=> deletePlant(plant.plant_id)} variant=\"contained\" color=\"secondary\">\n              Delete\n      </Button></TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    </Fragment>\n    \n  );\n}\n\n\nexport default ListPlants;","import React, {Fragment} from 'react';\nimport './App.css';\nimport CreatePlant from './components/CreatePlant';\nimport ListPlants from './components/ListPlants';\n\n\nfunction App() {\n  return (\n      <Fragment>\n        <CreatePlant/>\n        <ListPlants/>\n      </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}
{"ast":null,"code":"import _regeneratorRuntime from\"/Users/torabi97/Desktop/post-bootcamp/plant_catalogue/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/torabi97/Desktop/post-bootcamp/plant_catalogue/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/torabi97/Desktop/post-bootcamp/plant_catalogue/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useEffect,useState}from\"react\";import{useHistory,Link}from\"react-router-dom\";import{makeStyles}from'@material-ui/core/styles';import Table from'@material-ui/core/Table';import TableBody from'@material-ui/core/TableBody';import TableCell from'@material-ui/core/TableCell';import TableContainer from'@material-ui/core/TableContainer';import TableHead from'@material-ui/core/TableHead';import TableRow from'@material-ui/core/TableRow';import Paper from'@material-ui/core/Paper';import axios from\"axios\";import EditPlant from\"./EditPlant\";import Button from'@material-ui/core/Button';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles({table:{minWidth:650}});var ListPlants=function ListPlants(){var classes=useStyles();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),plants=_useState2[0],setPlants=_useState2[1];var getPlants=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios(\"/plants\").then(function(res){setPlants(res.data);}).catch(function(e){console.log(\"error listing plants\",e);});case 2:return _context.abrupt(\"return\",_context.sent);case 3:case\"end\":return _context.stop();}}},_callee);}));return function getPlants(){return _ref.apply(this,arguments);};}();var deletePlant=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios(\"/plants/\".concat(id),{method:\"DELETE\"}).then(function(plantDeleted){setPlants(plants.filter(function(plant){return plant.plant_id!==id;}));}).catch(function(e){console.log(\"error listing plants\",e);});case 2:return _context2.abrupt(\"return\",_context2.sent);case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function deletePlant(_x){return _ref2.apply(this,arguments);};}();var history=useHistory();useEffect(function(){getPlants();},[]);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Plant Catalogue\"}),/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{className:classes.table,\"aria-label\":\"simple table\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"ID\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"Name\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"Description\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"Family\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"Kingdom\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"Species\"}),/*#__PURE__*/_jsx(TableCell,{align:\"Center\",children:\"Edit Plant\"}),/*#__PURE__*/_jsx(TableCell,{align:\"Center\",children:\"Delete Plant\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:plants.map(function(plant){return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{component:\"th\",scope:\"row\",children:plant.plant_id}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:plant.name}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:plant.description}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:plant.family}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:plant.kingdom}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:plant.species}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:/*#__PURE__*/_jsx(EditPlant,{plant:plant})}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return deletePlant(plant.plant_id);},variant:\"contained\",color:\"secondary\",children:\"Delete\"})})]},plant.plant_id);})})]})})]});};export default ListPlants;","map":{"version":3,"sources":["/Users/torabi97/Desktop/post-bootcamp/plant_catalogue/client/src/components/ListPlants.js"],"names":["React","Fragment","useEffect","useState","useHistory","Link","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","axios","EditPlant","Button","useStyles","table","minWidth","ListPlants","classes","plants","setPlants","getPlants","then","res","data","catch","e","console","log","deletePlant","id","method","plantDeleted","filter","plant","plant_id","history","map","name","description","family","kingdom","species"],"mappings":"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","sourcesContent":["import React, {Fragment, useEffect, useState} from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport axios from \"axios\";\nimport EditPlant from \"./EditPlant\";\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst ListPlants = () => {\n  const classes = useStyles();\n  const [plants, setPlants] = useState([])\n\n\n  const getPlants = async () => {\n    return await axios(\"/plants\")\n      .then((res) => {\n        setPlants(res.data)\n      })\n      .catch((e) => {\n        console.log(\"error listing plants\", e);\n      })\n  }\n\n  const deletePlant = async (id) => {\n    return await axios(`/plants/${id}`, {\n      method: \"DELETE\"\n    })\n      .then((plantDeleted) => {\n        setPlants(plants.filter(plant => plant.plant_id !== id))\n      })\n      .catch((e) => {\n        console.log(\"error listing plants\", e);\n      })\n  }\n\n  const history = useHistory();\n\n  \n\n  useEffect(() => {\n    getPlants()\n  },[])\n\n\n  return (\n    <Fragment>\n      <h1>Plant Catalogue</h1>\n      <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ID</TableCell>\n            <TableCell align=\"center\">Name</TableCell>\n            <TableCell align=\"center\">Description</TableCell>\n            <TableCell align=\"center\">Family</TableCell>\n            <TableCell align=\"center\">Kingdom</TableCell>\n            <TableCell align=\"center\">Species</TableCell>\n            <TableCell align=\"Center\">Edit Plant</TableCell>\n            <TableCell align=\"Center\">Delete Plant</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {plants.map((plant) => (\n            <TableRow key={plant.plant_id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {plant.plant_id}\n              </TableCell>\n              <TableCell align=\"center\">{plant.name}</TableCell>\n              <TableCell align=\"center\">{plant.description}</TableCell>\n              <TableCell align=\"center\">{plant.family}</TableCell>\n              <TableCell align=\"center\">{plant.kingdom}</TableCell>\n              <TableCell align=\"center\">{plant.species}</TableCell>\n              <TableCell align=\"center\"><EditPlant plant={plant}/></TableCell>\n              <TableCell align=\"center\"><Button onClick={()=> deletePlant(plant.plant_id)} variant=\"contained\" color=\"secondary\">\n              Delete\n      </Button></TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    </Fragment>\n    \n  );\n}\n\n\nexport default ListPlants;"]},"metadata":{},"sourceType":"module"}
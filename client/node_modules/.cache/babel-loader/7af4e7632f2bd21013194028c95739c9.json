{"ast":null,"code":"var _jsxFileName = \"/Users/torabi97/Desktop/post-bootcamp/plant_catalogue/client/src/components/CreatePlant.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from '@material-ui/core/Button';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 200\n    }\n  }\n}));\n\nconst CreatePlant = () => {\n  _s();\n\n  const classes = useStyles();\n  const [plantDetail, setPlantDetail] = useState({\n    name: \"\",\n    description: \"\",\n    image: \"\"\n  });\n\n  const onSubmitForm = async e => {\n    e.preventDefault();\n    return await axios.post(\"http://localhost:5000/plants/\").then(res => {\n      console.log(res);\n    }).catch(error => {\n      console.log(\"Plant Creation Error: \", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create a Plant Porfolio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: onSubmitForm(e),\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-error-helper-text\",\n        label: \"Plant Name\",\n        type: \"text\",\n        value: plantDetail.name,\n        onChange: e => setPlantDetail(prev => ({ ...prev,\n          name: e.target.value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-error-helper-text\",\n        label: \"Plant Description\",\n        type: \"text\",\n        value: plantDetail.description,\n        onChange: e => setPlantDetail(prev => ({ ...prev,\n          description: e.target.value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-error-helper-text\",\n        label: \"Image URL\",\n        type: \"url\",\n        value: plantDetail.image,\n        onChange: e => setPlantDetail(prev => ({ ...prev,\n          image: e.target.value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit Plant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreatePlant, \"b7G+hGGTjmd/74vlD6n8xyWk4CQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = CreatePlant;\nexport default CreatePlant;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePlant\");","map":{"version":3,"sources":["/Users/torabi97/Desktop/post-bootcamp/plant_catalogue/client/src/components/CreatePlant.js"],"names":["React","useState","makeStyles","TextField","Button","axios","useStyles","theme","root","margin","spacing","width","CreatePlant","classes","plantDetail","setPlantDetail","name","description","image","onSubmitForm","e","preventDefault","post","then","res","console","log","catch","error","prev","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from '@material-ui/core/Button';\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 200,\n    },\n  },\n}));\n\n\nconst CreatePlant = () => {\n  const classes = useStyles();\n  const [plantDetail, setPlantDetail] = useState({\n    name: \"\",\n    description: \"\",\n    image: \"\"\n  })\n\n  const onSubmitForm = async (e) => {\n    e.preventDefault()\n    return await axios.post(\"http://localhost:5000/plants/\")\n        .then((res) => {\n          console.log(res);\n        })\n        .catch((error) => {\n          console.log(\"Plant Creation Error: \", error);\n        });\n  }\n\n  return (\n    <div>\n      <h1>Create a Plant Porfolio</h1>\n      <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={onSubmitForm(e)}>\n      <TextField\n          id=\"standard-error-helper-text\"\n          label=\"Plant Name\"\n          type=\"text\"\n          value={plantDetail.name}\n          onChange={e => setPlantDetail((prev) => ({\n            ...prev,\n            name: e.target.value,\n          }))}\n        />\n        <TextField\n          id=\"standard-error-helper-text\"\n          label=\"Plant Description\"\n          type=\"text\"\n          value={plantDetail.description}\n          onChange={e => setPlantDetail((prev) => ({\n            ...prev,\n            description: e.target.value,\n          }))}\n        />\n        <TextField\n          id=\"standard-error-helper-text\"\n          label=\"Image URL\"\n          type=\"url\"\n          value={plantDetail.image}\n          onChange={e => setPlantDetail((prev) => ({\n            ...prev,\n            image: e.target.value,\n          }))}\n        />\n        <button>\n          Submit Plant\n        </button>\n      </form>\n      \n    </div>\n  );\n};\n\nexport default CreatePlant;\n"]},"metadata":{},"sourceType":"module"}
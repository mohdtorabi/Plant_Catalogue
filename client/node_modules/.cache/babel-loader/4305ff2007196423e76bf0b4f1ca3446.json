{"ast":null,"code":"import _objectSpread from\"/Users/torabi97/Desktop/post-bootcamp/plant_catalogue/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/torabi97/Desktop/post-bootcamp/plant_catalogue/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/torabi97/Desktop/post-bootcamp/plant_catalogue/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/torabi97/Desktop/post-bootcamp/plant_catalogue/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import TextField from\"@material-ui/core/TextField\";import Button from'@material-ui/core/Button';import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{root:{'& .MuiTextField-root':{margin:theme.spacing(1),width:200}}};});var CreatePlant=function CreatePlant(){var classes=useStyles();var _useState=useState({name:\"\",description:\"\",family:\"\",kingdom:\"\",species:\"\"}),_useState2=_slicedToArray(_useState,2),plantDetail=_useState2[0],setPlantDetail=_useState2[1];var onSubmitForm=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var body,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();_context.prev=1;body={name:plantDetail.name,description:plantDetail.description,family:plantDetail.family,kingdom:plantDetail.kingdom,species:plantDetail.species};_context.next=5;return axios(\"/plants\",{method:\"POST\",url:'/',headers:{\"Content-Type\":\"application/json\"},data:JSON.stringify(body)});case 5:response=_context.sent;window.location=\"/\";_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);console.log(\"errorrr\");case 12:case\"end\":return _context.stop();}}},_callee,null,[[1,9]]);}));return function onSubmitForm(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Create a Plant Porfolio\"}),/*#__PURE__*/_jsxs(\"form\",{className:classes.root,noValidate:true,autoComplete:\"off\",onSubmit:onSubmitForm,children:[/*#__PURE__*/_jsx(TextField,{id:\"standard-error-helper-text\",label:\"Plant Name\",type:\"text\",value:plantDetail.name,onChange:function onChange(e){return setPlantDetail(function(prev){return _objectSpread(_objectSpread({},prev),{},{name:e.target.value});});}}),/*#__PURE__*/_jsx(TextField,{id:\"standard-error-helper-text\",label:\"Plant Description\",type:\"text\",value:plantDetail.description,onChange:function onChange(e){return setPlantDetail(function(prev){return _objectSpread(_objectSpread({},prev),{},{description:e.target.value});});}}),/*#__PURE__*/_jsx(TextField,{id:\"standard-error-helper-text\",label:\"Plant Family\",type:\"text\",value:plantDetail.family,onChange:function onChange(e){return setPlantDetail(function(prev){return _objectSpread(_objectSpread({},prev),{},{family:e.target.value});});}}),/*#__PURE__*/_jsx(TextField,{id:\"standard-error-helper-text\",label:\"Plant Kingdom\",type:\"url\",value:plantDetail.kingdom,onChange:function onChange(e){return setPlantDetail(function(prev){return _objectSpread(_objectSpread({},prev),{},{kingdom:e.target.value});});}}),/*#__PURE__*/_jsx(TextField,{id:\"standard-error-helper-text\",label:\"Plant Species\",type:\"url\",value:plantDetail.species,onChange:function onChange(e){return setPlantDetail(function(prev){return _objectSpread(_objectSpread({},prev),{},{species:e.target.value});});}}),/*#__PURE__*/_jsx(\"button\",{style:{direction:\"flex\",justifyContent:\"flex-end\",marginTop:\"20px\",fontSize:\"0.875em\",color:\"white\",backgroundColor:\"#3f51b5\",boxShadow:\"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\",padding:\"6px 16px\",borderRadius:\"4px\",boxSizing:\"border-box\"},children:\"Create Plant\"})]})]});};export default CreatePlant;","map":{"version":3,"sources":["/Users/torabi97/Desktop/post-bootcamp/plant_catalogue/client/src/components/CreatePlant.js"],"names":["React","useState","makeStyles","TextField","Button","axios","useStyles","theme","root","margin","spacing","width","CreatePlant","classes","name","description","family","kingdom","species","plantDetail","setPlantDetail","onSubmitForm","e","preventDefault","body","method","url","headers","data","JSON","stringify","response","window","location","console","log","prev","target","value","direction","justifyContent","marginTop","fontSize","color","backgroundColor","boxShadow","padding","borderRadius","boxSizing"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from '@material-ui/core/Button';\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 200,\n    },\n  },\n}));\n\n\nconst CreatePlant = () => {\n  const classes = useStyles();\n  const [plantDetail, setPlantDetail] = useState({\n    name: \"\",\n    description: \"\",\n    family: \"\",\n    kingdom: \"\",\n    species: \"\",\n  })\n\n  const onSubmitForm = async (e) => {\n    e.preventDefault()\n    try {\n      const body = {\n        name: plantDetail.name, \n        description: plantDetail.description, \n        family: plantDetail.family,\n        kingdom: plantDetail.kingdom,\n        species: plantDetail.species,\n      };\n      const response = await axios(\"/plants\", {\n        method: \"POST\",\n        url: '/',\n        headers: {\"Content-Type\": \"application/json\"},\n        data: JSON.stringify(body)\n      });\n      window.location = \"/\"\n    } catch {\n      console.log(\"errorrr\");\n    }\n  }\n\n  return (\n    <div>\n      <h1>Create a Plant Porfolio</h1>\n      <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={onSubmitForm}>\n      <TextField\n          id=\"standard-error-helper-text\"\n          label=\"Plant Name\"\n          type=\"text\"\n          value={plantDetail.name}\n          onChange={e => setPlantDetail((prev) => ({\n            ...prev,\n            name: e.target.value,\n          }))}\n        />\n        <TextField\n          id=\"standard-error-helper-text\"\n          label=\"Plant Description\"\n          type=\"text\"\n          value={plantDetail.description}\n          onChange={e => setPlantDetail((prev) => ({\n            ...prev,\n            description: e.target.value,\n          }))}\n        />\n        <TextField\n          id=\"standard-error-helper-text\"\n          label=\"Plant Family\"\n          type=\"text\"\n          value={plantDetail.family}\n          onChange={e => setPlantDetail((prev) => ({\n            ...prev,\n            family: e.target.value,\n          }))}\n        />\n        <TextField\n          id=\"standard-error-helper-text\"\n          label=\"Plant Kingdom\"\n          type=\"url\"\n          value={plantDetail.kingdom}\n          onChange={e => setPlantDetail((prev) => ({\n            ...prev,\n            kingdom: e.target.value,\n          }))}\n        />\n        <TextField\n          id=\"standard-error-helper-text\"\n          label=\"Plant Species\"\n          type=\"url\"\n          value={plantDetail.species}\n          onChange={e => setPlantDetail((prev) => ({\n            ...prev,\n            species: e.target.value,\n          }))}\n        />\n        <button style={{direction:\"flex\", justifyContent:\"flex-end\",marginTop:\"20px\",fontSize:\"0.875em\", color: \"white\", backgroundColor:\"#3f51b5\", boxShadow:\"0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)\", padding:\"6px 16px\", borderRadius:\"4px\", boxSizing:\"border-box\" }}>\n          Create Plant\n        </button>\n      </form>\n      \n    </div>\n  );\n};\n\nexport default CreatePlant;\n"]},"metadata":{},"sourceType":"module"}
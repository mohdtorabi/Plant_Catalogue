{"ast":null,"code":"var _jsxFileName = \"/Users/torabi97/Desktop/post-bootcamp/plant_catalogue/client/src/components/EditPlant.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport TextField from \"@material-ui/core/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 100 + rand();\n  const left = 100 + rand();\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nconst EditPlant = () => {\n  _s();\n\n  const classes = useStyles(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const [modalStyle] = useState(getModalStyle);\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const body = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit a Plant Porfolio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-error-helper-text\",\n        label: \"Plant Name\",\n        type: \"text\" // value={plantDetail.name}\n        // onChange={e => setPlantDetail((prev) => ({\n        //   ...prev,\n        //   name: e.target.value,\n        // }))}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-error-helper-text\",\n        label: \"Plant Description\",\n        type: \"text\" // value={plantDetail.description}\n        // onChange={e => setPlantDetail((prev) => ({\n        //   ...prev,\n        //   description: e.target.value,\n        // }))}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-error-helper-text\",\n        label: \"Image URL\",\n        type: \"url\" // value={plantDetail.image}\n        // onChange={e => setPlantDetail((prev) => ({\n        //   ...prev,\n        //   image: e.target.value,\n        // }))}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit Plant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleOpen,\n      children: \"Open Modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditPlant, \"p+PfpQWRJSW5eCi9+wrB37XJE8A=\", false, function () {\n  return [useStyles];\n});\n\n_c = EditPlant;\nexport default EditPlant;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPlant\");","map":{"version":3,"sources":["/Users/torabi97/Desktop/post-bootcamp/plant_catalogue/client/src/components/EditPlant.js"],"names":["React","useState","makeStyles","Modal","TextField","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","EditPlant","classes","modalStyle","open","setOpen","handleOpen","handleClose","body","root"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport TextField from \"@material-ui/core/TextField\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 100 + rand();\n  const left = 100 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nconst EditPlant = () => {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = useState(getModalStyle);\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  \n\n  const body = (\n    <div>\n      <h1>Edit a Plant Porfolio</h1>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n      <TextField\n          id=\"standard-error-helper-text\"\n          label=\"Plant Name\"\n          type=\"text\"\n          // value={plantDetail.name}\n          // onChange={e => setPlantDetail((prev) => ({\n          //   ...prev,\n          //   name: e.target.value,\n          // }))}\n        />\n        <TextField\n          id=\"standard-error-helper-text\"\n          label=\"Plant Description\"\n          type=\"text\"\n          // value={plantDetail.description}\n          // onChange={e => setPlantDetail((prev) => ({\n          //   ...prev,\n          //   description: e.target.value,\n          // }))}\n        />\n        <TextField\n          id=\"standard-error-helper-text\"\n          label=\"Image URL\"\n          type=\"url\"\n          // value={plantDetail.image}\n          // onChange={e => setPlantDetail((prev) => ({\n          //   ...prev,\n          //   image: e.target.value,\n          // }))}\n        />\n        <button>\n          Submit Plant\n        </button>\n      </form>\n      \n    </div>\n  );\n\n  return (\n    <div>\n      <button type=\"button\" onClick={handleOpen}>\n        Open Modal\n      </button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n}\n\nexport default EditPlant;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/torabi97/Desktop/post-bootcamp/plant_catalogue/client/src/components/EditPlant.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport TextField from \"@material-ui/core/TextField\";\nimport axios from \"axios\";\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\nexport default function EditPlant({\n  plant\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [plantDetail, setPlantDetail] = useState({\n    name: plant.name,\n    description: plant.description,\n    family: plant.family,\n    kingdom: plant.kingdom,\n    species: plant.species\n  });\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const updatePlantDetail = async e => {\n    e.preventDefault();\n\n    try {\n      const body = {\n        name: plantDetail.name,\n        description: plantDetail.description,\n        family: plantDetail.family,\n        kingdom: plantDetail.kingdom,\n        species: plantDetail.species\n      };\n      const response = await axios(`/plants/${plant.plant_id}`, {\n        method: \"PUT\",\n        url: '/',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        data: JSON.stringify(body)\n      });\n      window.location = \"/\";\n    } catch {\n      console.log(\"errorrr\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"button\",\n      onClick: handleOpen,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      \"aria-labelledby\": \"transition-modal-title\",\n      \"aria-describedby\": \"transition-modal-description\",\n      className: classes.modal,\n      open: open,\n      onClose: handleClose,\n      closeAfterTransition: true,\n      BackdropComponent: Backdrop,\n      BackdropProps: {\n        timeout: 500\n      },\n      children: /*#__PURE__*/_jsxDEV(Fade, {\n        in: open,\n        style: {\n          backgroundColor: \"white\",\n          color: \"black\",\n          padding: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Edit Plant Porfolio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: classes.root,\n            noValidate: true,\n            autoComplete: \"off\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-error-helper-text\",\n              label: \"Plant Name\",\n              type: \"text\",\n              value: plantDetail.name,\n              onChange: e => setPlantDetail(prev => ({ ...prev,\n                name: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-error-helper-text\",\n              label: \"Plant Description\",\n              type: \"text\",\n              value: plantDetail.description,\n              onChange: e => setPlantDetail(prev => ({ ...prev,\n                description: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-error-helper-text\",\n              label: \"Plant Family\",\n              type: \"url\",\n              value: plantDetail.family,\n              onChange: e => setPlantDetail(prev => ({ ...prev,\n                family: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-error-helper-text\",\n              label: \"Plant Kingdom\",\n              type: \"url\",\n              value: plantDetail.kingdom,\n              onChange: e => setPlantDetail(prev => ({ ...prev,\n                kingdom: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-error-helper-text\",\n              label: \"Plant Species\",\n              type: \"url\",\n              value: plantDetail.species,\n              onChange: e => setPlantDetail(prev => ({ ...prev,\n                species: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: e => updatePlantDetail(e),\n              children: \"Edit Plant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditPlant, \"co8iOiMh7f++1/7K7x/70cSKfAY=\", false, function () {\n  return [useStyles];\n});\n\n_c = EditPlant;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPlant\");","map":{"version":3,"sources":["/Users/torabi97/Desktop/post-bootcamp/plant_catalogue/client/src/components/EditPlant.js"],"names":["React","useState","makeStyles","Modal","Backdrop","Fade","TextField","axios","Button","useStyles","theme","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","EditPlant","plant","classes","open","setOpen","plantDetail","setPlantDetail","name","description","family","kingdom","species","handleOpen","handleClose","updatePlantDetail","e","preventDefault","body","response","plant_id","method","url","headers","data","JSON","stringify","window","location","console","log","timeout","color","root","prev","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport TextField from \"@material-ui/core/TextField\";\nimport axios from \"axios\";\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function EditPlant({plant}) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const [plantDetail, setPlantDetail] = useState({\n    name: plant.name,\n    description: plant.description,\n    family: plant.family,\n    kingdom: plant.kingdom,\n    species: plant.species,\n  })\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const updatePlantDetail = async (e) => {\n    e.preventDefault()\n    try {\n      const body = {\n        name: plantDetail.name, \n        description: plantDetail.description, \n        family: plantDetail.family,\n        kingdom: plantDetail.kingdom,\n        species: plantDetail.species,\n      };\n      const response = await axios(`/plants/${plant.plant_id}`, {\n        method: \"PUT\",\n        url: '/',\n        headers: {\"Content-Type\": \"application/json\"},\n        data: JSON.stringify(body)\n      });\n      window.location = \"/\";\n    } catch {\n      console.log(\"errorrr\");\n    }\n  }\n\n  return (\n    <div>\n      <Button variant=\"contained\" color=\"primary\" type=\"button\" onClick={handleOpen}>\n        Edit\n      </Button>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open} style={{backgroundColor:\"white\", color:\"black\", padding:\"10px\"}}>\n          <div>\n            <h1>Edit Plant Porfolio</h1>\n            <form\n              className={classes.root}\n              noValidate\n              autoComplete=\"off\"\n            >\n              <TextField\n                id=\"standard-error-helper-text\"\n                label=\"Plant Name\"\n                type=\"text\"\n                value={plantDetail.name}\n                onChange={(e) =>\n                  setPlantDetail((prev) => ({\n                    ...prev,\n                    name: e.target.value,\n                  }))\n                }\n              />\n              <TextField\n                id=\"standard-error-helper-text\"\n                label=\"Plant Description\"\n                type=\"text\"\n                value={plantDetail.description}\n                onChange={(e) =>\n                  setPlantDetail((prev) => ({\n                    ...prev,\n                    description: e.target.value,\n                  }))\n                }\n              />\n              <TextField\n                id=\"standard-error-helper-text\"\n                label=\"Plant Family\"\n                type=\"url\"\n                value={plantDetail.family}\n                onChange={(e) =>\n                  setPlantDetail((prev) => ({\n                    ...prev,\n                    family: e.target.value,\n                  }))\n                }\n              />\n              <TextField\n                id=\"standard-error-helper-text\"\n                label=\"Plant Kingdom\"\n                type=\"url\"\n                value={plantDetail.kingdom}\n                onChange={(e) =>\n                  setPlantDetail((prev) => ({\n                    ...prev,\n                    kingdom: e.target.value,\n                  }))\n                }\n              />\n              <TextField\n                id=\"standard-error-helper-text\"\n                label=\"Plant Species\"\n                type=\"url\"\n                value={plantDetail.species}\n                onChange={(e) =>\n                  setPlantDetail((prev) => ({\n                    ...prev,\n                    species: e.target.value,\n                  }))\n                }\n              />\n              <Button variant=\"contained\" color=\"primary\" onClick={e => updatePlantDetail(e)}>Edit Plant</Button>\n            </form>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}